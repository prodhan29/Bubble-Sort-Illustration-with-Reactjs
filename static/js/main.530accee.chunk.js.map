{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["elementStyle","borderRadius","padding","border","App","useState","intValue","setIntValue","iIndex","setiIndex","jIndex","setJIndex","ages","setAges","msg","setCompleteMsg","swap","arr","xp","yp","temp","getElementStyle","item","backgroundColor","height","updateCurrentState","bubbleSort","n","i","j","useEffect","length","setTimeout","className","style","display","justifyContent","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAKMA,EAAe,CACnBC,aAAc,MACdC,QAAS,OACTC,OAAQ,qBA+EKC,MA5Ef,WAAgB,IAAD,EAEmBC,mBAAS,GAF5B,mBAENC,EAFM,KAEIC,EAFJ,OAGeF,mBAAS,GAHxB,mBAGNG,EAHM,KAGEC,EAHF,OAIeJ,mBAAS,GAJxB,mBAINK,EAJM,KAIEC,EAJF,OAKWN,mBAAS,CAAC,IAAI,GAAG,GAAG,EAAE,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,KAL/D,mBAKNO,EALM,KAKAC,EALA,OAMiBR,mBAAS,IAN1B,mBAMNS,EANM,KAMDC,EANC,KASPC,EAAK,SAACC,EAAKC,EAAIC,GACnB,IAAIC,EAAOH,EAAIC,GACfD,EAAIC,GAAMD,EAAIE,GACdF,EAAIE,GAAMC,GAgBNC,EAAgB,SAACC,GACrB,OAAO,2BACFtB,GADL,IAEEuB,gBAAiBX,EAAKF,EAAO,KAAOY,EAAO,UAAaV,EAAKF,KAAYY,EAAO,UAAY,UAC5FE,OAASF,EAAK,GAAI,QAIhBG,EAAmB,SAAER,GACzBJ,EAAQI,IAGJS,EAAW,SAACT,EAAKU,EAAGnB,EAAQE,GAChC,IAAIkB,EAAGC,EACP,IAAKD,EAAIpB,EAAQoB,GAAKpB,EAASoB,IAE3B,IAAKC,EAAInB,EAAQmB,GAAKnB,EAAQmB,IAEtBZ,EAAIY,GAAKZ,EAAIY,EAAE,KAEjBb,EAAKC,EAAIY,EAAEA,EAAE,GACbJ,EAAmBR,KAY/B,OANAa,qBAAU,WACLtB,IAAWI,EAAKmB,OAxCnBC,YAAW,WACTzB,GAAY,kBAAID,EAAS,KACzBK,GAAU,kBAAKD,EAAO,KACtBgB,EAAWd,EAAMA,EAAKmB,OAAQvB,EAAQE,GAExB,IAAXA,GAAgBA,GAAUE,EAAKmB,OAAQvB,KAAY,IACpDC,EAAUD,EAAQ,GAClBG,EAAU,MA/BI,KAiEbI,EAAe,cACpB,CAACT,IAID,sBAAK2B,UAAU,MAAf,UACI,+CACA,+CAAkBrB,EAAKmB,OAASvB,EAAhC,OAEA,qBAAK0B,MAAO,CAACC,QAAS,OAAQC,eAAgB,gBAA9C,SACIxB,EAAKyB,KAAI,SAACf,EAAMM,GACd,OAAO,sBAAKM,MAAK,eAAMb,EAAgBC,IAAhC,cAA0CA,EAA1C,YAGb,qBAAKY,MAAO,CAAEC,QAAiB,KAARrB,EAAa,OAAS,SAA7C,uCCtEOwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.530accee.chunk.js","sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react';\n\nconst INTERVAL_TIME = 300;\n\nconst elementStyle = {\n  borderRadius: '5px',\n  padding: '10px',\n  border: '1px solid #E0E0E0',\n}\n\nfunction App() {\n\n  const [intValue, setIntValue] = useState(1);\n  const [iIndex, setiIndex] = useState(0);\n  const [jIndex, setJIndex] = useState(0);\n  const [ages, setAges] = useState([200,56,88,2,100,150,14,71,39,120,19,31,51,61]);\n  const [msg, setCompleteMsg] = useState('');\n  \n\n  const swap=(arr, xp, yp)=> {\n    var temp = arr[xp];\n    arr[xp] = arr[yp];\n    arr[yp] = temp;\n  }\n\n  const print=()=>{\n    setTimeout(()=> {\n      setIntValue(()=>intValue+1);\n      setJIndex(()=> jIndex+1);\n      bubbleSort(ages, ages.length, iIndex, jIndex);\n\n      if(jIndex !== 0 && jIndex % (ages.length- iIndex) === 0) {\n        setiIndex(iIndex +1);\n        setJIndex(0);\n      }\n    }, INTERVAL_TIME);\n  }\n\n  const getElementStyle=(item)=> {\n    return {\n      ...elementStyle, \n      backgroundColor: ages[jIndex-1] === item ? '#E57373' : (ages[jIndex] === item ? '#4CAF50' : '#FFFDE7'),\n      height: (item+25)+'px',\n    }\n  }\n\n  const updateCurrentState=( arr)=>{\n    setAges(arr);\n  }\n\n  const bubbleSort=(arr, n, iIndex, jIndex) => {\n    let i, j;\n    for (i = iIndex; i <= iIndex ; i++)\n    {\n        for (j = jIndex; j <= jIndex; j++)\n        {\n            if (arr[j] > arr[j+1])\n            {\n              swap(arr,j,j+1);\n              updateCurrentState(arr);\n            }\n        }\n    }\n  }\n\n  useEffect(()=>{\n    if(iIndex !== ages.length) print();\n    else setCompleteMsg(\"Complete\");\n  },[intValue]\n  );\n\n  return (\n    <div className=\"App\">\n        <h1> Bubble Sort </h1>\n        <h4> Steps left: {ages.length - iIndex} </h4>\n      \n        <div style={{display: 'flex', justifyContent: 'space-evenly'}}>\n           {ages.map((item, i)=> {\n              return <div style={{...getElementStyle(item)}}> {item} </div>\n           })}\n        </div>\n        <div style={{ display: msg === '' ? 'none' : 'block'}}> Array is now sorted </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}